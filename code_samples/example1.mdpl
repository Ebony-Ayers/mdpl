namespace exampleOne
public
{
    fn add(int32 a, int32 b) -> (int32 c)
    fn idiv(int32 a, int32 b) -> (int32 c, int32 rem)
    sub incremenet(int32 ref a) -> ()

    string str = "Hello world"
}

protected
{
    //functons in the ptotected block are only accessible in the same namespace
}

code
{
    fn add(int32 a, int32 b) -> (int32 c)
    {
        c = a + b
        ret error:sucess;
    }
    fn idiv(int32 a, int32 b) -> (int32 c, int32 rem)
    {
        if b == 0               //if and while must be followed by a {}
        {
            ret error:div0
        }
        while a >= b
        {
            //two statments on one line
            a -= b; c += 1
        }
        rem = a
        ret error:sucess
    }
    sub increment(int32 ref a) -> ()
    {
        a = add(a, 1)
        let uint32 unusedVariable = 0
    }
    /*
    //block comment containing a line comment
    */
    //line comment /* with a block comment
}